
@{
    ViewData["Title"] = "Index";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Kendo UI Snippet</title>

    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.2.802/styles/kendo.default-v2.min.css" />

    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2022.2.802/js/kendo.all.min.js"></script>
</head>
<body>

    <div id="grid"></div>
    <script>
        $("#grid").kendoGrid({
            columns: [
                {
                    field: "FactorID",
                    title: "شماره فاکتور"
                },
                {
                    field: "ProductID",
                    title: "کد کالا"
                },
                {
                    field: "Stock",
                    title: "تعداد کالا"
                },
                {
                    field: "SoldDate",
                    title: "تاریخ فروش"
                },
                {
                    field: "CustomerName",
                    title: "نام مشتری"
                },
                { command: "destroy", title: "Delete", width: "110px" }
            ],
            toolbar: ["create", "save", "cancel"],
            editable: true,
            sortable: true,
            filterable: true,
            pageable: true,
            dataSource: {
                transport: {
                    read: function (options) {
                        $.ajax({
                            url: "@Url.Action("LoadData", "Home")",
                            success: function (result) {
                                // notify the data source that the request succeeded
                                options.success(result);
                                console.log(result)
                            },
                            error: function (result) {
                                // notify the data source that the request failed
                                options.error(result);
                            }
                        });
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                        model: {
                            sellManagementID: "sellManagementID",
                            fields: {
                                FactorID: {
                                    editable: false,
                                    nullable: false,
                                    type: "int"
                                },
                                Stock: {
                                    type: "int",
                                    validation: { required: true }
                                },
                                SoldDate: {
                                    type: "datetime",
                                    validation: { required: true }
                                },
                                CustomerName: {
                                    type: "string",
                                    validation: { required: true }
                                },
                            }
                        }
                    },

                },
            },
            saveChanges: function (options) {

                if (options.sender._data[0].sellManagementID == null) {
                    sellManagement = new Object();
                    sellManagement.FactorID = options.sender._data[0].factorID;
                    sellManagement.Stock = options.sender._data[0].stock;
                    sellManagement.SoldDate = parseInt(options.sender._data[0].soldDate);
                    sellManagement.CustomerName = parseInt(options.sender._data[0].customerName);
                    console.log(sellManagement);
                    sellManagementProduct(sellManagement);
                }
                else {
                    for (var i = 0; i < options.sender._data; i++) {
                        sellManagement = new Object();
                        sellManagement.FactorID = options.sender._data[i].factorID;
                        sellManagement.Stock = options.sender._data[i].stock;
                        sellManagement.SoldDate = parseInt(options.sender._data[i].soldDate);
                        sellManagement.CustomerName = parseInt(options.sender._data[i].customerName);
                        console.log(sellManagement);
                        sellManagementUpdate(sellManagement);
                    }
                }
            },
            save: function (e) {
                console.log(e)
                if (e.values.name !== "") {
                    // the user changed the name field
                    if (e.values.name !== e.model.name) {
                        /* The result can be observed in the DevTools(F12) console of the browser. */
                        console.log("name is modified");
                    }
                } else {
                    e.preventDefault();
                    /* The result can be observed in the DevTools(F12) console of the browser. */
                    console.log("name cannot be empty");
                }
            },
            remove: function (e) {
                var id = e.model.sellManagementID;
                console.log(id);
                sellManagementDelete(id);
            }

        });

        function sellManagementDelete(id) {
            $.ajax({
                url: "Home/DeleteProduct/" + id,
                type: 'DELETE',
            });
        }
        function sellManagementProduct(sellManagement) {
            console.log(product);

            $.ajax({
                url: "Home/Create",
                type: 'POST',
                data: sellManagement,
            });
        }
        function sellManagementUpdate(sellManagement) {
            $.ajax({
                url: "Home/EditProduct",
                type: 'PUT',
                data: sellManagement,
            });
        }
    </script>
</body>
</html>